<?xml version="1.0" encoding="UTF-8"?>
<ctl:package xmlns:ctl="http://www.occamlab.com/ctl" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ows="http://www.opengis.net/ows/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:wcps="http://www.opengis.net/wcps/1.0/" xmlns:proc="http://www.opengis.net/wcps/1.0/proc" xmlns:ctlp="http://www.occamlab.com/te/parsers" xmlns:parsers="http://www.occamlab.com/te/parsers" xmlns:wcs2="http://www.opengis.net/wcs/2.0" xmlns:wcseo="http://www.opengis.net/wcseo/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<ctl:test name="wcs2:get-proc-main" isConformanceClass="true" isBasic="false">
		<ctl:param name="Capabilities"/>
		<ctl:assertion>Test WCS 2.0 get processing extension.</ctl:assertion>
		<ctl:code>
			<xsl:variable name="url">
                <xsl:value-of select="$Capabilities//ows:OperationsMetadata/ows:Operation[@name='GetCapabilities']/ows:DCP/ows:HTTP/ows:Get/@xlink:href"/>
          </xsl:variable>
			<xsl:variable name="CoverageId">
						<xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][*[local-name()='BoundingBox']/@dimensions=2][1]/*[local-name()='CoverageId'][1]"/>
			</xsl:variable>
			<xsl:variable name="DescribeCoverage">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>get</ctl:method>
					<ctl:param name="SERVICE">WCS</ctl:param>
					<ctl:param name="VERSION">2.0.1</ctl:param>
					<ctl:param name="REQUEST">DescribeCoverage</ctl:param>
					<ctl:param name="CoverageId">
						<xsl:value-of select="$CoverageId"/>
					</ctl:param>
					<ctlp:XMLValidatingParser>
						<ctlp:schemas>
							<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
						</ctlp:schemas>
					</ctlp:XMLValidatingParser>
				</ctl:request>
			</xsl:variable>
			<xsl:choose>
				<xsl:when test="not(empty($Capabilities))">
					<ctl:call-test name="wcs2:get-proc-req1">
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-proc-req2">
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-proc-req7">
						<ctl:with-param name="url" select="$url"/>
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
						<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
						<ctl:with-param name="CoverageId" select="$CoverageId"/>
					</ctl:call-test>

					<ctl:call-test name="wcs2:get-proc-req8-10">
						<ctl:with-param name="url" select="$url"/>
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
						<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
						<ctl:with-param name="CoverageId" select="$CoverageId"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-proc-req11-14">
						<ctl:with-param name="url" select="$url"/>
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
						<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
						<ctl:with-param name="CoverageId" select="$CoverageId"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-proc-req15-17">
						<ctl:with-param name="url" select="$url"/>
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
						<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
						<ctl:with-param name="CoverageId" select="$CoverageId"/>
					</ctl:call-test>

				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[FAILURE] Parsing or validation errors.</ctl:message>
					<ctl:fail/>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req1-->
	<ctl:test name="wcs2:get-proc-req1">
		<ctl:param name="Capabilities"/>
		<ctl:assertion>Req1:Send a GetCapabilities request to server under test, verify that the response contains a Profile element with said URI.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not(contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '), 'http://www.opengis.net/spec/WCS_service-extension_processing/2.0/conf/processing') )">
				<ctl:message>[FAILURE] Send a GetCapabilities request to server under test, verify that the response contains a Profile element with http://www.opengis.net/spec/WCS_service-extension_processing/2.0/conf/processing.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req2-->
	<ctl:test name="wcs2:get-proc-req2">
		<ctl:param name="Capabilities"/>
		<ctl:assertion>Req2:check that ProcessCoverages requests adhere to the XML schema defined for this Processing Extension.</ctl:assertion>
		<ctl:code>
			<ctl:message>done by test 10 and 11 or test 13 and 14.</ctl:message>
		</ctl:code>
	</ctl:test>
	<!--req3-->
	<ctl:test name="wcs2:get-proc-req3">
		<ctl:param name="ProcessCoverages"/>
		<ctl:assertion>Req3:check extra parameters if there is any.</ctl:assertion>
		<ctl:code>
			<ctl:message>need extra parameter definition.</ctl:message>
		</ctl:code>
	</ctl:test>
	<!--req4-->
	<ctl:test name="wcs2:get-proc-req4">
		<ctl:param name="ProcessCoverages"/>
		<ctl:param name="number"/>
		<ctl:assertion>Req4:Send valid ProcessCoveragesrequests to the server under test which deliver an empty coverage result list or a non-empty coverage result list.Test passes if all responses are encoded as required.</ctl:assertion>
		<ctl:code>
			<ctl:message>Test mimetype</ctl:message>
			<xsl:if test="count(//*[local-name()='multipart-response']/*[local-name()='part'])=$number">
				<ctl:message>[FAILURE] The result number does not match.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req5-6-->
	<ctl:test name="wcs2:get-proc-req5-6">
		<ctl:param name="ProcessCoverages"/>
		<ctl:param name="number"/>
		<ctl:param name="encoding"/>
		<ctl:assertion>Req5-6:Send valid ProcessCoveragesrequests to the server under test which deliver a non-empty coverage result list.Test passes if all responses are encoded as required.</ctl:assertion>
		<ctl:code>
			<ctl:message>Test encoding.</ctl:message>
			<xsl:if test="//*[local-name()='multipart-response']/*[local-name()='part'][$number]/*[local-name()='headers']/*[local-name()='header'][@name='Content-type']=$encoding">
				<ctl:message>[FAILURE] The result number does not match.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req7-->
	<ctl:test name="wcs2:get-proc-req7">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
		<ctl:param name="DescribeCoverage"/>
		<ctl:param name="CoverageId"/>
		<ctl:assertion>Req7:For each exception referenced in the requirement: Send an erroneous ProcessCoverages request to the server under test provoking this exception, as per its definition. Check for proper exception reporting.</ctl:assertion>
		<ctl:code>
			<xsl:variable name="ProcessCoverages">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>get</ctl:method>
					<ctl:param name="service">WCS</ctl:param>
					<ctl:param name="version">2.0.1</ctl:param>
					<ctl:param name="request">ProcessCoverages</ctl:param>
		
					<ctl:param name="query">for</ctl:param>

							
													<parsers:HTTPParser>
						<parsers:parse>
							<parsers:XMLValidatingParser>
								<parsers:schemas>
									<parsers:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</parsers:schema>
								</parsers:schemas>
							</parsers:XMLValidatingParser>
						</parsers:parse>
					</parsers:HTTPParser>
							

				</ctl:request>
			</xsl:variable>
			<xsl:if test="empty($ProcessCoverages//*[local-name()='Exception'])">
				<ctl:message>[FAILURE] The result should contain an ows:Exception.</ctl:message>
				<ctl:fail/>
			</xsl:if>
			<xsl:if test="not($ProcessCoverages//@*[local-name()='exceptionCode']='SyntaxError') ">
				<ctl:message>[FAILURE] the result should contain a  Exception.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>

	<!--req8-10-->
	<ctl:test name="wcs2:get-proc-req8-10">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
		<ctl:param name="DescribeCoverage"/>
		<ctl:param name="CoverageId"/>
		<ctl:assertion>Req8-10:Send valid ProcessCoverages requests using the GET/KVP protocol. Check that the result is correct.</ctl:assertion>
		<ctl:code>
			<xsl:variable name="ProcessCoverages">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>get</ctl:method>
					<ctl:param name="SERVICE">WCS</ctl:param>
					<ctl:param name="VERSION">2.0.1</ctl:param>
					<ctl:param name="REQUEST">ProcessCoverages</ctl:param>
		
					<ctl:param name="query">for c in ( <xsl:value-of select="$CoverageId"/> ) return  encode (c,"png") </ctl:param>
					<parsers:HTTPParser>
						<parsers:parse>                    								<parsers:ImageParser>
 						        	<parsers:type/>
                     					</parsers:ImageParser>
						</parsers:parse>
					</parsers:HTTPParser>
				</ctl:request>
			</xsl:variable>
			<ctl:call-test name="wcs:ProcessCoverages_not_exception">
				<ctl:with-param name="ProcessCoverages" select="$ProcessCoverages"/>
			</ctl:call-test>
			<ctl:call-test name="wcs:get-proc-req3">
				<ctl:with-param name="ProcessCoverages" select="$ProcessCoverages"/>
			</ctl:call-test>
			<ctl:call-test name="wcs:get-proc-req4">
				<ctl:with-param name="ProcessCoverages" select="$ProcessCoverages"/>
				<ctl:with-param name="number" select="1"/>
			</ctl:call-test>
			<ctl:call-test name="wcs:get-proc-req5-6">
				<ctl:with-param name="ProcessCoverages" select="$ProcessCoverages"/>
				<ctl:with-param name="number" select="1"/>
				<ctl:with-param name="encoding" select="png"/>
			</ctl:call-test>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs:ProcessCoverages_not_exception">
		<ctl:param name="ProcessCoverages"/>
		<ctl:assertion>check getcoverage result.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not(empty($ProcessCoverages//*[local-name()='Exception']))">
				<ctl:message>[FAILURE] The result should not contain an ows:Exception.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>


	<!--req11-14-->
	<ctl:test name="wcs2:get-proc-req11-14">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
		<ctl:param name="DescribeCoverage"/>
		<ctl:param name="CoverageId"/>
		<ctl:assertion>Req11-14:Send valid ProcessCoverages requests using the WCS XML/POST protocol. Check that the result is correct.</ctl:assertion>
		<ctl:code>
			<xsl:variable name="ProcessCoverages">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:body><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<proc:ProcessCoverages 
    xmlns:wcs="http://www.opengis.net/wcs/2.0"
    xmlns:gml="http://www.opengis.net/gml/3.2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:proc="http://www.opengis.net/wcs_service-extension_processing/2.0"
     service="WCS"  version="2.0.1">
	<proc:query>
		for c in ( ]]><xsl:value-of select="$CoverageId"/><![CDATA[ )
		return  encode (c, "png")
        </proc:query>
</proc:ProcessCoverages>]]></ctl:body>
					<parsers:HTTPParser/>
				</ctl:request>
			</xsl:variable>
			<ctl:call-test name="wcs:ProcessCoverages_not_exception">
				<ctl:with-param name="ProcessCoverages" select="$ProcessCoverages"/>
			</ctl:call-test>
			<ctl:call-test name="wcs:get-proc-req3">
				<ctl:with-param name="ProcessCoverages" select="$ProcessCoverages"/>
			</ctl:call-test>
			<ctl:call-test name="wcs:get-proc-req4">
				<ctl:with-param name="ProcessCoverages" select="$ProcessCoverages"/>
				<ctl:with-param name="number" select="1"/>
			</ctl:call-test>
			<ctl:call-test name="wcs:get-proc-req5-6">
				<ctl:with-param name="ProcessCoverages" select="$ProcessCoverages"/>
				<ctl:with-param name="number" select="1"/>
				<ctl:with-param name="encoding" select="png"/>
			</ctl:call-test>
		</ctl:code>
	</ctl:test>

	<!--req15-17-->
	<ctl:test name="wcs2:get-proc-req15-17">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
		<ctl:param name="DescribeCoverage"/>
		<ctl:param name="CoverageId"/>
		<ctl:assertion>Req15-17:Send valid ProcessCoverages requests using the WCS SOAP protocol. Check that the result is correct.</ctl:assertion>
		<ctl:code>
					<xsl:variable name="ProcessCoverages">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
					<ctl:body>
<proc:ProcessCoverages 
    xmlns:wcs="http://www.opengis.net/wcs/2.0"
    xmlns:gml="http://www.opengis.net/gml/3.2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:proc="http://www.opengis.net/wcs_service-extension_processing/2.0"
     service="WCS"  version="2.0.1">
	<proc:query>
		for c in ( <xsl:value-of select="$CoverageId"/> )
		return  encode (c, "png")
        </proc:query>
</proc:ProcessCoverages></ctl:body>
							
					<parsers:HTTPParser>
						<parsers:parse>
							<parsers:XMLValidatingParser>
								<parsers:schemas>
									<parsers:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</parsers:schema>
								</parsers:schemas>
							</parsers:XMLValidatingParser>
						</parsers:parse>
					</parsers:HTTPParser>
						</ctl:soap-request>
					</xsl:variable>

	
			<ctl:call-test name="wcs:ProcessCoverages_not_exception">
				<ctl:with-param name="ProcessCoverages" select="$ProcessCoverages"/>
			</ctl:call-test>
			<ctl:call-test name="wcs:get-proc-req3">
				<ctl:with-param name="ProcessCoverages" select="$ProcessCoverages"/>
			</ctl:call-test>
			<ctl:call-test name="wcs:get-proc-req4">
				<ctl:with-param name="ProcessCoverages" select="$ProcessCoverages"/>
				<ctl:with-param name="number" select="1"/>
			</ctl:call-test>
			<ctl:call-test name="wcs:get-proc-req5-6">
				<ctl:with-param name="ProcessCoverages" select="$ProcessCoverages"/>
				<ctl:with-param name="number" select="1"/>
				<ctl:with-param name="encoding" select="png"/>
			</ctl:call-test>
		</ctl:code>
	</ctl:test>
</ctl:package>

