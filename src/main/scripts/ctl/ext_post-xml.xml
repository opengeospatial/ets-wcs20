<ctl:package xmlns:ctl="http://www.occamlab.com/ctl" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ows="http://www.opengis.net/ows/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:ctlp="http://www.occamlab.com/te/parsers" xmlns:wcs2="http://www.opengis.net/wcs/2.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<ctl:test name="wcs2:post-xml-main" isConformanceClass="true" isBasic="false">
		<ctl:param name="Capabilities"/>
		<ctl:assertion>Test WCS 2.0 Post XML Extension.</ctl:assertion>
		<ctl:code>
			<xsl:variable name="url">
			   <xsl:value-of select="$Capabilities//ows:OperationsMetadata/ows:Operation[@name='GetCapabilities']/ows:DCP/ows:HTTP/ows:Get/@xlink:href"/>
			</xsl:variable>
		
			<xsl:choose>
				<xsl:when test="not(empty($Capabilities))">
					<ctl:call-test name="wcs2:post-xml-req1">
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:post-xml-req2">
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:post-xml-req3">
						<ctl:with-param name="url" select="$url"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:post-xml-req4">
						<ctl:with-param name="url" select="$url"/>
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:post-xml-req5">
						<ctl:with-param name="url" select="$url"/>
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:post-xml-req6">
						<ctl:with-param name="url" select="$url"/>
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[FAILURE] Parsing or validation errors.</ctl:message>
					<ctl:fail/>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req1-->
	<ctl:test name="wcs2:post-xml-req1">
		<ctl:param name="Capabilities"/>
		<ctl:assertion>Req1:Send a GetCapabilities request to server under test, verify that the response contains a Profile element with said URI.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not(contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '), 'http://www.opengis.net/spec/WCS_protocol-binding_post-xml/1.0') )">
				<ctl:message xmlns:ctl="http://www.occamlab.com/ctl">[FAILURE] Can not find http://www.opengis.net/spec/WCS_protocol-binding_post-xml/1.0</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req2-->
	<ctl:test name="wcs2:post-xml-req2">
		<ctl:param name="Capabilities"/>
		<ctl:assertion>Req2:Send a GetCapabilities request to server under test, verify that the response satisfies the constraints.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="count(distinct-values($Capabilities//*[local-name()='Operation']//*[local-name()='Post']/@xlink:href))=1">
					<ctl:message xmlns:ctl="http://www.occamlab.com/ctl" select="concat(distinct-values($Capabilities//*[local-name()='Operation']//*[local-name()='Post']/@xlink:href),' is the only URL for HTTP POST requests')"/>
					<xsl:if test="not(count(index-of($Capabilities//*[local-name()='OperationsMetadata']/*[local-name()='Constraint'][@name='PostEncoding']//*[local-name()='Value'], 'XML'))=1)">
						<ctl:message xmlns:ctl="http://www.occamlab.com/ctl">[FAILURE] ows:Constraint element for XML POST is not included in the OperationsMetadata element</ctl:message>
						<ctl:fail/>
					</xsl:if>
				</xsl:when>
				<xsl:when test="count(distinct-values($Capabilities//*[local-name()='Operation']//*[local-name()='Post']/@xlink:href))>1">
					<ctl:message xmlns:ctl="http://www.occamlab.com/ctl" select="concat(distinct-values($Capabilities//*[local-name()='Operation']//*[local-name()='Post']/@xlink:href),' are the URLs for HTTP POST requests')"/>
					<xsl:for-each select="$Capabilities//*[local-name()='Operation']">
						<ctl:message xmlns:ctl="http://www.occamlab.com/ctl" select="concat('test','./@name')"/>
						<xsl:if test="not(count(index-of(./*[local-name()='Constraint'][@name='PostEncoding']//*[local-name()='Value'], 'XML'))>=1)">
							<ctl:message xmlns:ctl="http://www.occamlab.com/ctl">[FAILURE] ows:Constraint element, with PostEncoding as the value of the name attribute and a value XML, is not included in the operation</ctl:message>
							<ctl:fail/>
						</xsl:if>
					</xsl:for-each>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message xmlns:ctl="http://www.occamlab.com/ctl">[FAILURE] No URLs for HTTP POST requests</ctl:message>
					<ctl:fail/>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req3-->
	<ctl:test name="wcs2:post-xml-req3">
		<ctl:param name="url"/>
		<ctl:assertion>Req3:Send syntactically legal and illegal GetCapabilities requests to server under test, verify that the server responds appropriately.</ctl:assertion>
		<ctl:code>
			<xsl:variable name="Capabilities">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>post</ctl:method>
					<ctl:header name="Content-type">text/xml</ctl:header>
					<ctl:body>
								<wcs:GetCapabilities  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
											xmlns:ows="http://www.opengis.net/ows/2.0"
											xmlns:wcs="http://www.opengis.net/wcs/2.0"
											service="WCS">
									<ows:AcceptVersions>
										<ows:Version>2.0.1</ows:Version>
									</ows:AcceptVersions>
								</wcs:GetCapabilities></ctl:body>
					<ctlp:XMLValidatingParser>
						<ctlp:schemas>
							<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
						</ctlp:schemas>
					</ctlp:XMLValidatingParser>
				</ctl:request>
			</xsl:variable>
			<xsl:choose>
				<xsl:when test="empty($Capabilities)">
					<ctl:message>[FAILURE] Parsing or validation errors.</ctl:message>
					<ctl:fail/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:if test="empty($Capabilities//wcs:Capabilities)">
						<ctl:message>[FAILURE] The result should contain a wcs:Capabilities.</ctl:message>
						<ctl:fail/>
					</xsl:if>
				</xsl:otherwise>
			</xsl:choose>
			<xsl:variable name="Capabilities">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>post</ctl:method>
					<ctl:header name="Content-type">text/xml</ctl:header>
					<ctl:body>
								<wcs:GetCapabilities  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
											xmlns:ows="http://www.opengis.net/ows/2.0"
											xmlns:wcs="http://www.opengis.net/wcs/2.0"
											service="WCS_Bogus">
									<ows:AcceptVersions>
										<ows:Version>2.0.1</ows:Version>
									</ows:AcceptVersions>
								</wcs:GetCapabilities></ctl:body>
					<ctlp:XMLValidatingParser>
						<ctlp:schemas>
							<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
						</ctlp:schemas>
					</ctlp:XMLValidatingParser>
				</ctl:request>
			</xsl:variable>
			<xsl:choose>
				<xsl:when test="empty($Capabilities)">
					<ctl:message>[FAILURE] Parsing or validation errors.</ctl:message>
					<ctl:fail/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:if test="empty($Capabilities//*[local-name()='Exception'])">
						<ctl:message>[FAILURE] The result should be an ows:ExceptionReport.</ctl:message>
						<ctl:fail/>
					</xsl:if>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req4-->
	<ctl:test name="wcs2:post-xml-req4">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
		<ctl:assertion>Req4:Send syntactically legal and illegal DescribeCoverage request to server under test, verify that the server responds appropriately.</ctl:assertion>
		<ctl:code>
			<xsl:variable name="DescribeCoverage">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>post</ctl:method>
					<ctl:header name="Content-type">text/xml</ctl:header>
					<ctl:body>
							<wcs:DescribeCoverage  xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
    								xmlns:wcs='http://www.opengis.net/wcs/2.0'
    								xmlns:gml='http://www.opengis.net/gml/3.2'
    								xsi:schemaLocation='http://www.opengis.net/wcs/2.0 ../../wcsAll.xsd'
    								service="WCS" version="2.0.1">
    								<wcs:CoverageId><xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][1]/*[local-name()='CoverageId']"/></wcs:CoverageId></wcs:DescribeCoverage></ctl:body>
					<ctlp:XMLValidatingParser>
						<ctlp:schemas>
							<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
						</ctlp:schemas>
					</ctlp:XMLValidatingParser>
				</ctl:request>
			</xsl:variable>
			<xsl:choose>
				<xsl:when test="empty($DescribeCoverage)">
					<ctl:message>[FAILURE] Parsing or validation errors.</ctl:message>
					<ctl:fail/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:if test="not(empty($DescribeCoverage//*[local-name()='Exception']))">
						<ctl:message>[FAILURE] The result should not be an ows:ExceptionReport.</ctl:message>
						<ctl:fail/>
					</xsl:if>
				</xsl:otherwise>
			</xsl:choose>
			<xsl:variable name="DescribeCoverage">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>post</ctl:method>
					<ctl:header name="Content-type">text/xml</ctl:header>
					<ctl:body>
						<wcs:DescribeCoverage  xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
    								xmlns:wcs='http://www.opengis.net/wcs/2.0'
    								xmlns:gml='http://www.opengis.net/gml/3.2'
    								xsi:schemaLocation='http://www.opengis.net/wcs/2.0 ../../wcsAll.xsd'
    								service="WCS_Bogus" version="2.0.1">
    							<wcs:CoverageId><xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][1]/*[local-name()='CoverageId']"/></wcs:CoverageId
><wcs:CoverageId><xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][1]/*[local-name()='CoverageId']"/></wcs:CoverageId></wcs:DescribeCoverage></ctl:body>
					<ctlp:XMLValidatingParser>
						<ctlp:schemas>
							<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
						</ctlp:schemas>
					</ctlp:XMLValidatingParser>
				</ctl:request>
			</xsl:variable>
			<xsl:choose>
				<xsl:when test="empty($DescribeCoverage)">
					<ctl:message>[FAILURE] Parsing or validation errors.</ctl:message>
					<ctl:fail/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:if test="empty($DescribeCoverage//*[local-name()='Exception'])">
						<ctl:message>[FAILURE] The result should be an ows:ExceptionReport.</ctl:message>
						<ctl:fail/>
					</xsl:if>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req5-->
	<ctl:test name="wcs2:post-xml-req5">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
				
		<ctl:assertion>Req5:Send syntactically legal and illegal GetCoverage request to server under test, verify that the server responds appropriately.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
			        <xsl:when test="contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '),'http://www.opengis.net/spec/GMLCOV/1.0/conf/gml')">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0"
									xmlns:gml="http://www.opengis.net/gml/3.2"
									xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
									xsi:schemaLocation="http://www.opengis.net/wcs/2.0 ../../wcsAll.xsd"
									service="WCS" version="2.0.1">
									<wcs:CoverageId><xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][1]/*[local-name()='CoverageId']"/></wcs:CoverageId></wcs:GetCoverage></ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<xsl:choose>
						<xsl:when test="empty($GetCoverage)">
							<ctl:message>[FAILURE] Parsing or validation errors.</ctl:message>
							<ctl:fail/>
						</xsl:when>
						<xsl:otherwise>
							<xsl:if test="not(empty($GetCoverage//*[local-name()='Exception']))">
								<ctl:message>[FAILURE] The result should not be an ows:ExceptionReport.</ctl:message>
								<ctl:fail/>
							</xsl:if>
						</xsl:otherwise>
					</xsl:choose>
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0"
									xmlns:gml="http://www.opengis.net/gml/3.2"
									xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
									xsi:schemaLocation="http://www.opengis.net/wcs/2.0 ../../wcsAll.xsd"
									service="WCS_Bogus" version="2.0.1">
									<wcs:CoverageId><xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][1]/*[local-name()='CoverageId']"/></wcs:CoverageId></wcs:GetCoverage></ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<xsl:choose>
						<xsl:when test="empty($GetCoverage)">
							<ctl:message>[FAILURE] Parsing or validation errors.</ctl:message>
							<ctl:fail/>
						</xsl:when>
						<xsl:otherwise>
							<xsl:if test="empty($GetCoverage//*[local-name()='Exception'])">
								<ctl:message>[FAILURE] The result should be an ows:ExceptionReport.</ctl:message>
								<ctl:fail/>
							</xsl:if>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] the server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req6-->
	<ctl:test name="wcs2:post-xml-req6">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
		
		<ctl:assertion>Req6:Send requests of all types supported to the server under test. Each request shall include all (mandatory and) optional parameters and shall be valid except for one parameter which shall contain an encoding error described in the exception specification. Test passes if exception is reported according to requirement.</ctl:assertion>
		<ctl:code>
			<xsl:variable name="Capabilities">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>post</ctl:method>
					<ctl:header name="Content-type">text/xml</ctl:header>
					<ctl:body>
						<wcs:GetCapabilities  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
							xmlns:ows="http://www.opengis.net/ows/2.0"
							xmlns:wcs="http://www.opengis.net/wcs/2.0"
							service="WCS_Bogus">
							<ows:AcceptVersions>
								<ows:Version>2.0.1</ows:Version>
							</ows:AcceptVersions>
						</wcs:GetCapabilities></ctl:body>
					<ctlp:XMLValidatingParser>
						<ctlp:schemas>
							<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
						</ctlp:schemas>
					</ctlp:XMLValidatingParser>
				</ctl:request>
			</xsl:variable>
			<xsl:choose>
				<xsl:when test="empty($Capabilities)">
					<ctl:message>[FAILURE] Parsing or validation errors.</ctl:message>
					<ctl:fail/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:for-each select="$Capabilities//ows:Exception">
						<xsl:choose>
							<xsl:when test="./@exceptionCode='InvalidEncodingSyntax'">
								<xsl:if test="empty(//*[local-name()='Exception']/@locator)">
									<ctl:message xmlns:ctl="http://www.occamlab.com/ctl">[FAILURE] The violating element is not given</ctl:message>
									<ctl:fail/>
								</xsl:if>
							</xsl:when>
							<xsl:otherwise>
      	  						</xsl:otherwise>
						</xsl:choose>
					</xsl:for-each>
				</xsl:otherwise>
			</xsl:choose>
			<xsl:variable name="DescribeCoverage">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>post</ctl:method>
					<ctl:header name="Content-type">text/xml</ctl:header>
					<ctl:body>
						<wcs:DescribeCoverage xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
    							xmlns:wcs='http://www.opengis.net/wcs/2.0'
    							xmlns:gml='http://www.opengis.net/gml/3.2'
    							xsi:schemaLocation='http://www.opengis.net/wcs/2.0 ../../wcsAll.xsd'
    							service="WCS_Bogus" version="2.0.1">
    							<wcs:CoverageId><xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][1]/*[local-name()='CoverageId']"/></wcs:CoverageId></wcs:DescribeCoverage></ctl:body>
					<ctlp:XMLValidatingParser>
						<ctlp:schemas>
							<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
						</ctlp:schemas>
					</ctlp:XMLValidatingParser>
				</ctl:request>
			</xsl:variable>
			<xsl:choose>
				<xsl:when test="empty($DescribeCoverage)">
					<ctl:message>[FAILURE] Parsing or validation errors.</ctl:message>
					<ctl:fail/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:for-each select="$DescribeCoverage//ows:Exception">
						<xsl:choose>
							<xsl:when test="./@exceptionCode='InvalidEncodingSyntax'">
								<xsl:if test="empty(//*[local-name()='Exception']/@locator)">
									<ctl:message xmlns:ctl="http://www.occamlab.com/ctl">[FAILURE] The violating element is not given</ctl:message>
									<ctl:fail/>
								</xsl:if>
							</xsl:when>
							<xsl:otherwise>
      	  						</xsl:otherwise>
						</xsl:choose>
					</xsl:for-each>
				</xsl:otherwise>
			</xsl:choose>
			<xsl:choose>
				<xsl:when test="contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '),'http://www.opengis.net/spec/GMLCOV/1.0/conf/gml')">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0"
									xmlns:gml="http://www.opengis.net/gml/3.2"
									xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
									xsi:schemaLocation="http://www.opengis.net/wcs/2.0 ../../wcsAll.xsd"
									service="WCS_Bogus" version="2.0.1">
									<wcs:CoverageId><xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][1]/*[local-name()='CoverageId']"/></wcs:CoverageId></wcs:GetCoverage></ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<xsl:choose>
						<xsl:when test="empty($GetCoverage)">
							<ctl:message>[FAILURE] Parsing or validation errors.</ctl:message>
							<ctl:fail/>
						</xsl:when>
						<xsl:otherwise>
							<xsl:for-each select="$GetCoverage//ows:Exception">
								<xsl:choose>
									<xsl:when test="./@exceptionCode='InvalidEncodingSyntax'">
										<xsl:if test="empty(//*[local-name()='Exception']/@locator)">
											<ctl:message xmlns:ctl="http://www.occamlab.com/ctl">[FAILURE] The violating element is not given</ctl:message>
											<ctl:fail/>
										</xsl:if>
									</xsl:when>
									<xsl:otherwise>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:for-each>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message> the server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
</ctl:package>
