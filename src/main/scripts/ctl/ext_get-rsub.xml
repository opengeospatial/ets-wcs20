<?xml version="1.0" encoding="UTF-8"?>
<ctl:package xmlns:ctl="http://www.occamlab.com/ctl" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ows="http://www.opengis.net/ows/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:wcps="http://www.opengis.net/wcps/1.0/" xmlns:proc="http://www.opengis.net/wcps/1.0/proc" xmlns:ctlp="http://www.occamlab.com/te/parsers" xmlns:parsers="http://www.occamlab.com/te/parsers" xmlns:wcs2="http://www.opengis.net/wcs/2.0" xmlns:wcseo="http://www.opengis.net/wcseo/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<ctl:test name="wcs2:get-rsub-main" isConformanceClass="true" isBasic="false">
		<ctl:param name="Capabilities"/>
		<ctl:assertion>Test WCS 2.0 Range Subsetting extension.</ctl:assertion>
		<ctl:code>
			<xsl:variable name="url">
                <xsl:value-of select="$Capabilities//ows:OperationsMetadata/ows:Operation[@name='GetCapabilities']/ows:DCP/ows:HTTP/ows:Get/@xlink:href"/>
            </xsl:variable>
			<xsl:variable name="SupportsGML">
				<xsl:for-each select="$Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']">
					<xsl:if test=". = 'http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage'">
						<xsl:value-of select="'true'"/>
					</xsl:if>
				</xsl:for-each>
			</xsl:variable>
			<xsl:variable name="CoverageId">
				<xsl:for-each select="$Capabilities//*[local-name()='CoverageSummary'][*[local-name()='BoundingBox']/@dimensions=2]/*[local-name()='CoverageId']">
					<xsl:variable name="DescribeCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">DescribeCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="."/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<xsl:if test="count($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']/*[local-name()='field'])&gt;2">
						<xsl:value-of select="."/>
					</xsl:if>
				</xsl:for-each>
			</xsl:variable>
			<xsl:variable name="DescribeCoverage">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>get</ctl:method>
					<ctl:param name="SERVICE">WCS</ctl:param>
					<ctl:param name="VERSION">2.0.1</ctl:param>
					<ctl:param name="REQUEST">DescribeCoverage</ctl:param>
					<ctl:param name="CoverageId">
						<xsl:value-of select="$CoverageId"/>
					</ctl:param>
					<ctlp:XMLValidatingParser>
						<ctlp:schemas>
							<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
						</ctlp:schemas>
					</ctlp:XMLValidatingParser>
				</ctl:request>
			</xsl:variable>
			<xsl:choose>
				<xsl:when test="not(empty($DescribeCoverage))">
					<ctl:call-test name="wcs2:get-rsub-req1">
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-rsub-req2">
						<ctl:with-param name="url" select="$url"/>
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
						<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                <ctl:with-param name="CoverageId" select="$CoverageId"/>
					</ctl:call-test>
					<xsl:choose>
						<xsl:when test="contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '), 'http://www.opengis.net/spec/WCS_protocol-binding_get-kvp/1.0')">
							<ctl:call-test name="wcs2:get-rsub-req10">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="Capabilities" select="$Capabilities"/>
								<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="CoverageId" select="$CoverageId"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-rsub-req11">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="Capabilities" select="$Capabilities"/>
								<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="CoverageId" select="$CoverageId"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-rsub-req12">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="Capabilities" select="$Capabilities"/>
                                                                <ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="CoverageId" select="$CoverageId"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:when test="contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '), 'http://www.opengis.net/spec/WCS_protocol-binding_post-xml/1.0')">
							<ctl:call-test name="wcs2:get-rsub-req13">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="Capabilities" select="$Capabilities"/>
								<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="CoverageId" select="$CoverageId"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:when test="contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '), 'http://www.opengis.net/spec/WCS_protocol-binding_soap/1.0')">
							<ctl:call-test name="wcs2:get-rsub-req14">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="Capabilities" select="$Capabilities"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="CoverageId" select="$CoverageId"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:otherwise>
							<ctl:message>[FAILURE] no supported protocal extensions.</ctl:message>
							<ctl:fail/>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:when>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:GetCoverage_not_exception">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>check getcoverage result.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not(empty($GetCoverage//*[local-name()='Exception']))">
				<ctl:message>[FAILURE] The result should not contain an ows:Exception.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:GetCoverage_exception">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>check getcoverage result.</ctl:assertion>
		<ctl:code>
			<xsl:if test="empty($GetCoverage//*[local-name()='Exception'])">
				<ctl:message>[FAILURE] The result should contain an ows:Exception.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req1-->
	<ctl:test name="wcs2:get-rsub-req1">
		<ctl:param name="Capabilities"/>
		<ctl:assertion>Req1:Test Record-subsetting extension identifier.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not(contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '), 'http://www.opengis.net/spec/WCS_service-extension_range-subsetting/1.0/conf/record-subsetting') )">
				<ctl:message>[FAILURE] Send a GetCapabilities request to server under test, verify that the response contains a Profile element with http://www.opengis.net/spec/WCS_service-extension_range-subsetting/1.0/conf/record-subsetting.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req2-->
	<ctl:test name="wcs2:get-rsub-req2">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
		<ctl:param name="DescribeCoverage"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="CoverageId"/>
		<ctl:assertion>Req2:Test GetCoverage request syntax.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '), 'http://www.opengis.net/spec/WCS_protocol-binding_get-kvp/1.0')">
					<ctl:message>test by the supported kvp protocol</ctl:message>
					<xsl:choose>
						<xsl:when test="$SupportsGML = 'true'">
							<xsl:variable name="GetCoverage">
								<ctl:request>
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:method>get</ctl:method>
									<ctl:param name="SERVICE">WCS</ctl:param>
									<ctl:param name="VERSION">2.0.1</ctl:param>
									<ctl:param name="REQUEST">GetCoverage</ctl:param>
									<ctl:param name="CoverageId">
										<xsl:value-of select="$CoverageId"/>
									</ctl:param>
									<ctl:param name="RANGESUBSET">
										<xsl:for-each select="$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name']">
											<xsl:value-of select="."/>
											<xsl:if test="not(position() = last())">,</xsl:if>
										</xsl:for-each>
									</ctl:param>
									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:request>
							</xsl:variable>
							<xsl:variable name="GetCoverage1">
								<ctl:request>
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:method>get</ctl:method>
									<ctl:param name="SERVICE">WCS</ctl:param>
									<ctl:param name="VERSION">2.0.1</ctl:param>
									<ctl:param name="REQUEST">GetCoverage</ctl:param>
									<ctl:param name="CoverageId">
										<xsl:value-of select="$CoverageId"/>
									</ctl:param>
									<ctl:param name="RANGESUBSET">
										<xsl:value-of select="concat($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][1]/@*[local-name()='name'],':',$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][count($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name'])]/@*[local-name()='name'])"/>
									</ctl:param>
									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:request>
							</xsl:variable>
							<xsl:variable name="GetCoverage2">
								<ctl:request>
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:method>get</ctl:method>
									<ctl:param name="SERVICE">WCS</ctl:param>
									<ctl:param name="VERSION">2.0.1</ctl:param>
									<ctl:param name="REQUEST">GetCoverage</ctl:param>
									<ctl:param name="CoverageId">
										<xsl:value-of select="$CoverageId"/>
									</ctl:param>
									<ctl:param name="RANGESUBSET">
										<xsl:value-of select="concat($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][count($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name'])]/@*[local-name()='name'],':',$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][1]/@*[local-name()='name'])"/>
									</ctl:param>
									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:request>
							</xsl:variable>
							<xsl:variable name="GetCoverage3">
								<ctl:request>
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:method>get</ctl:method>
									<ctl:param name="SERVICE">WCS</ctl:param>
									<ctl:param name="VERSION">2.0.1</ctl:param>
									<ctl:param name="REQUEST">GetCoverage</ctl:param>
									<ctl:param name="CoverageId">
										<xsl:value-of select="$CoverageId"/>
									</ctl:param>
									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:request>
							</xsl:variable>
							<xsl:variable name="GetCoverage4">
								<ctl:request>
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:method>get</ctl:method>
									<ctl:param name="SERVICE">WCS</ctl:param>
									<ctl:param name="VERSION">2.0.1</ctl:param>
									<ctl:param name="REQUEST">GetCoverage</ctl:param>
									<ctl:param name="CoverageId">
										<xsl:value-of select="$CoverageId"/>
									</ctl:param>
									<ctl:param name="RANGESUBSET">
										<xsl:value-of select="concat($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][count(//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name'])]/@*[local-name()='name'],',',$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][1]/@*[local-name()='name'])"/>
									</ctl:param>
									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:request>
							</xsl:variable>

//subsetting
					<xsl:variable name="GetCoverage5">
								<ctl:request>
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:method>get</ctl:method>
									<ctl:param name="SERVICE">WCS</ctl:param>
									<ctl:param name="VERSION">2.0.1</ctl:param>
									<ctl:param name="REQUEST">GetCoverage</ctl:param>
									<ctl:param name="CoverageId">
										<xsl:value-of select="$CoverageId"/>
									</ctl:param>


									<ctl:param name="RANGESUBSET">
										<xsl:value-of select="$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][count(//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name'])]/@*[local-name()='name']"/>
									</ctl:param>
									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:request>
							</xsl:variable>
							<xsl:variable name="GetCoverage6">
								<ctl:request>
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:method>get</ctl:method>
									<ctl:param name="SERVICE">WCS</ctl:param>
									<ctl:param name="VERSION">2.0.1</ctl:param>
									<ctl:param name="REQUEST">GetCoverage</ctl:param>
									<ctl:param name="CoverageId">
										<xsl:value-of select="$CoverageId"/>
									</ctl:param>

									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:request>
							</xsl:variable>
							<ctl:call-test name="wcs2:GetCoverage_not_exception">
								<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-rsub-req4">
								<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
								<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/> 
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-rsub-req5">
								<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
								<ctl:with-param name="GetCoverage1" select="$GetCoverage1"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-rsub-req6">
								<ctl:with-param name="GetCoverage" select="$GetCoverage2"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-rsub-req7">
								<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
								<ctl:with-param name="GetCoverage" select="$GetCoverage3"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-rsub-req8">
								<ctl:with-param name="DescribeCoverageRangeType" select="concat($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][count(//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name'])]/@*[local-name()='name'],',',$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][1]/@*[local-name()='name'])"/>
								<ctl:with-param name="GetCoverageRangeType" select="$GetCoverage4//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name']"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-rsub-req9">
								<ctl:with-param name="GetCoverageRangeSet" select="tokenize($GetCoverage5//*[local-name()='rangeSet']/*[local-name()='DataBlock']//*[local-name()='tupleList'],'\s+')[1]"/>
								<ctl:with-param name="GetCoverageRangeSet" select="$GetCoverage6//*[local-name()='rangeSet']/*[local-name()='DataBlock']//*[local-name()='tupleList']"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:otherwise>
							<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[FAILURE] The entry does not provide the required extension</ctl:message>
					<ctl:fail/>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req3-->
	<ctl:test name="wcs2:get-rsub-req3">
		<ctl:assertion>Req3:Test GetCoverage subsetting list.</ctl:assertion>
		<ctl:code>
			<ctl:message>invoked by test 13 and 14.</ctl:message>
		</ctl:code>
	</ctl:test>
	<!--req4-->
	<ctl:test name="wcs2:get-rsub-req4">
		<ctl:param name="GetCoverage"/>
		<ctl:param name="DescribeCoverage"/>
		<ctl:assertion>Req4:Test GetCoverage existing component.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name']=$GetCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name'])">
				<ctl:message>[FAILURE] The result rangetype does not match.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req5-->
	<ctl:test name="wcs2:get-rsub-req5">
		<ctl:param name="GetCoverage"/>
		<ctl:param name="GetCoverage1"/>
		<ctl:assertion>Req5:Test GetCoverage subsetting expansion.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not($GetCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name']=$GetCoverage1//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name'])">
				<ctl:message>[FAILURE] The result rangetype does not match.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req6-->
	<ctl:test name="wcs2:get-rsub-req6">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>Req6:Test GetCoverage interval order.</ctl:assertion>
		<ctl:code>
			<ctl:call-test name="wcs2:GetCoverage_exception">
				<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
			</ctl:call-test>
		</ctl:code>
	</ctl:test>
	<!--req7-->
	<ctl:test name="wcs2:get-rsub-req7">
		<ctl:param name="DescribeCoverage"/>
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>Req7:Send a GetCoverage requestcontaining no RSub::rangeSubset parameter to the service under test, check that the result consists of a coverage whose range type contains exactly the original coverage’s range type elements in the proper sequence of this list.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name']=$GetCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name'])">
				<ctl:message>[FAILURE] The result rangetype does not match.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req8-->
	<ctl:test name="wcs2:get-rsub-req8">
		<ctl:param name="DescribeCoverageRangeType"/>
		<ctl:param name="GetCoverageRangeType"/>
		<ctl:assertion>Req8:Test GetCoverage response component.</ctl:assertion>
		<ctl:code>
			<xsl:if test="$DescribeCoverageRangeType=GetCoverageRangeType">
				<ctl:message>[FAILURE] The result rangetype does not match.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-rsub-req9">
		<ctl:param name="GetCoverageRangeSet"/>
		<ctl:param name="GetCoverageRangeSet1"/>
		<ctl:assertion>Req8:Test GetCoverage response component.</ctl:assertion>
		<ctl:code>
			<xsl:if test="$GetCoverageRangeSet=GetCoverageRangeSet1">
				<ctl:message>[FAILURE] The result rangeSet does not match.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:GetCoverage_not_exception">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>check getcoverage result.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not(empty($GetCoverage//*[local-name()='Exception']))">
				<ctl:message>[FAILURE] The result should not contain an ows:Exception.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:GetCoverage_exception">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>check getcoverage result.</ctl:assertion>
		<ctl:code>
			<xsl:if test="empty($GetCoverage//*[local-name()='Exception'])">
				<ctl:message>[FAILURE] The result should contain an ows:Exception.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req10-->
	<ctl:test name="wcs2:get-rsub-req10">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
		<ctl:param name="DescribeCoverage"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="CoverageId"/>
		<ctl:assertion>Req10:Test KVP request list encoding.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="RANGESUBSET">
								<xsl:for-each select="$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name']">
									<xsl:value-of select="."/>
									<xsl:if test="not(position() = last())">,</xsl:if>
								</xsl:for-each>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req11-->
	<ctl:test name="wcs2:get-rsub-req11">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
                <ctl:param name="DescribeCoverage"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="CoverageId"/>
		<ctl:assertion>Req11:Test KVP request component encoding.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="RANGESUBSET">
								<xsl:value-of select="$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][1]/@*[local-name()='name']"/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req12-->
	<ctl:test name="wcs2:get-rsub-req12">
                <ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
                <ctl:param name="DescribeCoverage"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="CoverageId"/>
		<ctl:assertion>Req12:Test KVP request interval encoding.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="RANGESUBSET">
								<xsl:value-of select="concat($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][1]/@*[local-name()='name'],':',$DescribeCoverage    //*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][count($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name'])]/@*[local-name()='name'])"/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req13-->
	<ctl:test name="wcs2:get-rsub-req13">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
		<ctl:param name="DescribeCoverage"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="CoverageId"/>
		<ctl:assertion>Req13:Test XML/Post request encoding.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<rsub:rangeSubset>
											<rsub:rangeItem>
												<rsub:rangeComponent>
													<xsl:value-of select="$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][1]/@*[local-name()='name']"/>
												</rsub:rangeComponent>
											</rsub:rangeItem>
											<rsub:rangeItem>
												<rsub:rangeInterval>
													<rsub:startComponent>
														<xsl:value-of select="$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][2]/@*[local-name()='name']"/>
													</rsub:startComponent>
													<rsub:endComponent>
														<xsl:value-of select="$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][count($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name'])]/@*[local-name()='name']"/>
													</rsub:endComponent>
												</rsub:rangeInterval>
											</rsub:rangeItem>
										</rsub:rangeSubset>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req14-->
	<ctl:test name="wcs2:get-rsub-req14">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="CoverageId"/>
		<ctl:assertion>Req14:Test SOAP request encoding.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<rsub:rangeSubset>
											<rsub:rangeItem>
												<rsub:rangeComponent>
													<xsl:value-of select="$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][1]/@*[local-name()='name']"/>
												</rsub:rangeComponent>
											</rsub:rangeItem>
											<rsub:rangeItem>
												<rsub:rangeInterval>
													<rsub:startComponent>
														<xsl:value-of select="$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][2]/@*[local-name()='name']"/>
													</rsub:startComponent>
													<rsub:endComponent>
														<xsl:value-of select="$DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field'][count($DescribeCoverage//*[local-name()='rangeType']/*[local-name()='DataRecord']//*[local-name()='field']/@*[local-name()='name'])]/@*[local-name()='name']"/>
													</rsub:endComponent>
												</rsub:rangeInterval>
											</rsub:rangeItem>
										</rsub:rangeSubset>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
</ctl:package>

