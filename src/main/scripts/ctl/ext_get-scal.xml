<?xml version="1.0" encoding="UTF-8"?>
<ctl:package xmlns:ctl="http://www.occamlab.com/ctl" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ows="http://www.opengis.net/ows/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:wcps="http://www.opengis.net/wcps/1.0/" xmlns:proc="http://www.opengis.net/wcps/1.0/proc" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" xmlns:ctlp="http://www.occamlab.com/te/parsers" xmlns:parsers="http://www.occamlab.com/te/parsers" xmlns:wcs2="http://www.opengis.net/wcs/2.0" xmlns:wcseo="http://www.opengis.net/wcseo/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<ctl:test name="wcs2:get-scal-main" isConformanceClass="true" isBasic="false">
		<ctl:param name="url"/>
		<ctl:assertion>Test WCS 2.0 Scaling extension.</ctl:assertion>
		<ctl:code>
			<xsl:variable name="Capabilities">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>get</ctl:method>
					<ctl:param name="SERVICE">WCS</ctl:param>
					<ctl:param name="ACCEPTVERSIONS">2.0.1</ctl:param>
					<ctl:param name="REQUEST">GetCapabilities</ctl:param>
					<ctlp:XMLValidatingParser>
						<ctlp:schemas>
							<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
						</ctlp:schemas>
					</ctlp:XMLValidatingParser>
				</ctl:request>
			</xsl:variable>
			<xsl:variable name="CoverageId">
						<xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][*[local-name()='BoundingBox']/@dimensions=2][1]/*[local-name()='CoverageId'][1]"/>
			</xsl:variable>

			<xsl:variable name="SupportsGML">
				<xsl:for-each select="$Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']">
					<xsl:if test=". = 'http://www.opengis.net/spec/GMLCOV/1.0/conf/gml'">
						<xsl:value-of select="'true'"/>
					</xsl:if>
				</xsl:for-each>
			</xsl:variable>
<!--get Coverage Id for testing-->

			<xsl:variable name="RectifiedGridCoverageId">
						<xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][string(wcs:CoverageSubtype)='RectifiedGridCoverage'][1]/*[local-name()='CoverageId'][1]"/>
			</xsl:variable>

<!-- Commented out as of https://github.com/opengeospatial/ets-wcs20/issues/37 -->
<!-- 			<xsl:variable name="ReferenceableGridCoverageId"> -->
<!-- 						<xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][string(wcs:CoverageSubtype)='ReferenceableGridCoverage'][1]/*[local-name()='CoverageId'][1]"/> -->
<!-- 			</xsl:variable> -->

			<xsl:variable name="GridCoverageId">
						<xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][string(wcs:CoverageSubtype)='GridCoverage'][1]/*[local-name()='CoverageId'][1]"/>
			</xsl:variable>



			<xsl:variable name="DescribeCoverage">
				<ctl:request>
					<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>get</ctl:method>
					<ctl:param name="SERVICE">WCS</ctl:param>
					<ctl:param name="VERSION">2.0.1</ctl:param>
					<ctl:param name="REQUEST">DescribeCoverage</ctl:param>
					<ctl:param name="CoverageId">
						<xsl:value-of select="$CoverageId"/>
					</ctl:param>
					<ctlp:XMLValidatingParser>
						<ctlp:schemas>
							<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
						</ctlp:schemas>
					</ctlp:XMLValidatingParser>
				</ctl:request>
			</xsl:variable>
			<xsl:variable name="axisLabels">
				<xsl:value-of select="$DescribeCoverage//*[local-name()='domainSet']//*[local-name()='axisLabels']"/>
			</xsl:variable>
			<xsl:choose>
				<xsl:when test="not(empty($DescribeCoverage))">
					<ctl:call-test name="wcs2:get-scal-req1">
						<ctl:with-param name="Capabilities" select="$Capabilities"/>
					</ctl:call-test>


					<xsl:choose>
						<xsl:when test="contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '), 'http://www.opengis.net/spec/WCS_protocol-binding_get-kvp/1.0')">
							<ctl:call-test name="wcs2:get-scal-req3-kvp">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="GridCoverageId" select="$GridCoverageId"/>
								<ctl:with-param name="RectifiedGridCoverageId" select="$RectifiedGridCoverageId"/>
								<!-- Commented out as of https://github.com/opengeospatial/ets-wcs20/issues/37 -->
<!-- 								<ctl:with-param name="ReferenceableGridCoverageId" select="$ReferenceableGridCoverageId"/> -->
                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req4-kvp">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req5-kvp">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
								<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req6-kvp">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req7-kvp">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req8-kvp">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req9-kvp">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req10-kvp">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req11-kvp">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req19-22">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
								<ctl:with-param name="Capabilities" select="$Capabilities"/>
								<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:when test="contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '), 'http://www.opengis.net/spec/WCS_protocol-binding_post-xml/1.0')">
							<ctl:call-test name="wcs2:get-scal-req3-post">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="GridCoverageId" select="$GridCoverageId"/>
								<ctl:with-param name="RectifiedGridCoverageId" select="$RectifiedGridCoverageId"/>
								<!-- Commented out as of https://github.com/opengeospatial/ets-wcs20/issues/37 -->
<!-- 								<ctl:with-param name="ReferenceableGridCoverageId" select="$ReferenceableGridCoverageId"/> -->
                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req4-post">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req5-post">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
								<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req6-post">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req7-post">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req8-post">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req9-post">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req10-post">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req11-post">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req23">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="Capabilities" select="$Capabilities"/>
								<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:when test="contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '), 'http://www.opengis.net/spec/WCS_protocol-binding_soap/1.0')">
							<ctl:call-test name="wcs2:get-scal-req3-soap">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="GridCoverageId" select="$GridCoverageId"/>
								<ctl:with-param name="RectifiedGridCoverageId" select="$RectifiedGridCoverageId"/>
								<!-- Commented out as of https://github.com/opengeospatial/ets-wcs20/issues/37 -->
<!-- 								<ctl:with-param name="ReferenceableGridCoverageId" select="$ReferenceableGridCoverageId"/> -->
                                 <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req4-soap">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req5-soap">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
								<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req6-soap">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req7-soap">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req8-soap">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req9-soap">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req10-soap">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req11-soap">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
							<ctl:call-test name="wcs2:get-scal-req24">
								<ctl:with-param name="url" select="$url"/>
								<ctl:with-param name="Capabilities" select="$Capabilities"/>
								<ctl:with-param name="CoverageId" select="$CoverageId"/>
                                                                <ctl:with-param name="SupportsGML" select="$SupportsGML"/>
                                                                <ctl:with-param name="axisLabels" select="$axisLabels"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:otherwise>
							<ctl:message>[FAILURE] no supported protocal extensions.</ctl:message>
							<ctl:fail/>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:when>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:GetCoverage_not_exception">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>check getcoverage result.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not(empty($GetCoverage//*[local-name()='Exception']))">
				<ctl:message>[FAILURE] The result should not contain an ows:Exception.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:GetCoverage_exception">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>check getcoverage result.</ctl:assertion>
		<ctl:code>
			<xsl:if test="empty($GetCoverage//*[local-name()='Exception'])">
				<ctl:message>[FAILURE] The result should contain an ows:Exception.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req1-->
	<ctl:test name="wcs2:get-scal-req1">
		<ctl:param name="Capabilities"/>
		<ctl:assertion>Req1:Test Scaling extension identifier.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not(contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '), 'http://www.opengis.net/spec/WCS_service-extension_scaling/1.0/conf/scaling') )">
				<ctl:message>[FAILURE] Send a GetCapabilities request to server under test, verify that the response contains a Profile element with http://www.opengis.net/spec/WCS_service-extension_scaling/1.0/conf/scaling.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req3-->
	<ctl:test name="wcs2:get-scal-req3-kvp">
		<ctl:param name="url"/>
		<ctl:param name="GridCoverageId"/>
		<ctl:param name="RectifiedGridCoverageId"/>
		<!-- Commented out as of https://github.com/opengeospatial/ets-wcs20/issues/37 -->
<!-- 		<ctl:param name="ReferenceableGridCoverageId"/> -->
		<ctl:param name="SupportsGML"/>
		<ctl:assertion>Req3:Test GridCoverage,RectifiedGridCoverage.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="not(empty($GridCoverageId))">
					<xsl:choose>
						<xsl:when test="$SupportsGML = 'true'">
							<xsl:variable name="GetCoverage">
								<ctl:request>
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:method>get</ctl:method>
									<ctl:param name="SERVICE">WCS</ctl:param>
									<ctl:param name="VERSION">2.0.1</ctl:param>
									<ctl:param name="REQUEST">GetCoverage</ctl:param>
									<ctl:param name="CoverageId">
										<xsl:value-of select="$GridCoverageId"/>
									</ctl:param>
									<ctl:param name="SCALEFACTOR">2.0</ctl:param>
									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:request>
							</xsl:variable>
							<ctl:call-test name="wcs2:GetCoverage_not_exception">
								<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:otherwise>
							<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:when>
			</xsl:choose>
			<xsl:choose>
				<xsl:when test="not(empty($RectifiedGridCoverageId))">
					<xsl:choose>
						<xsl:when test="$SupportsGML = 'true'">
							<xsl:variable name="GetCoverage1">
								<ctl:request>
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:method>get</ctl:method>
									<ctl:param name="SERVICE">WCS</ctl:param>
									<ctl:param name="VERSION">2.0.1</ctl:param>
									<ctl:param name="REQUEST">GetCoverage</ctl:param>
									<ctl:param name="CoverageId">
										<xsl:value-of select="$RectifiedGridCoverageId"/>
									</ctl:param>
									<ctl:param name="SCALEFACTOR">2.0</ctl:param>
									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:request>
							</xsl:variable>
							<ctl:call-test name="wcs2:GetCoverage_not_exception">
								<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:otherwise>
							<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:when>
			</xsl:choose>
			<xsl:choose>
				<xsl:when test="empty($GridCoverageId) and empty($RectifiedGridCoverageId)">
					<ctl:message>[FAILURE] The service should offer at least one $GridCoverageId or one RectifiedGridCoverageId.</ctl:message>
					<ctl:fail/>
				</xsl:when>
			</xsl:choose>
			<!-- Commented out as of https://github.com/opengeospatial/ets-wcs20/issues/37 -->
<!-- 			<xsl:choose> -->
<!-- 				<xsl:when test="not(empty($ReferenceableGridCoverageId))"> -->
<!-- 					<xsl:choose> -->
<!-- 						<xsl:when test="$SupportsGML = 'true'"> -->
<!-- 							<xsl:variable name="GetCoverage2"> -->
<!-- 								<ctl:request> -->
<!-- 									<ctl:url> -->
<!-- 										<xsl:value-of select="$url"/> -->
<!-- 									</ctl:url> -->
<!-- 									<ctl:method>get</ctl:method> -->
<!-- 									<ctl:param name="SERVICE">WCS</ctl:param> -->
<!-- 									<ctl:param name="VERSION">2.0.1</ctl:param> -->
<!-- 									<ctl:param name="REQUEST">GetCoverage</ctl:param> -->
<!-- 									<ctl:param name="CoverageId"> -->
<!-- 										<xsl:value-of select="$ReferenceableGridCoverageId"/> -->
<!-- 									</ctl:param> -->
<!-- 									<ctl:param name="SCALEFACTOR">2.0</ctl:param> -->
<!-- 									<ctlp:XMLValidatingParser> -->
<!-- 										<ctlp:schemas> -->
<!-- 											<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema> -->
<!-- 										</ctlp:schemas> -->
<!-- 									</ctlp:XMLValidatingParser> -->
<!-- 								</ctl:request> -->
<!-- 							</xsl:variable> -->
<!-- 							<ctl:call-test name="wcs2:GetCoverage_not_exception"> -->
<!-- 								<ctl:with-param name="GetCoverage" select="$GetCoverage2"/> -->
<!-- 							</ctl:call-test> -->
<!-- 						</xsl:when> -->
<!-- 						<xsl:otherwise> -->
<!-- 							<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message> -->
<!-- 						</xsl:otherwise> -->
<!-- 					</xsl:choose> -->
<!-- 				</xsl:when> -->
<!-- 				<xsl:otherwise> -->
<!-- 					<ctl:message>[FAILURE] The service should offer at least one ReferenceableGridCoverage.</ctl:message> -->
<!-- 					<ctl:fail/> -->
<!-- 				</xsl:otherwise> -->
<!-- 			</xsl:choose> -->
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req3-post">	
                <ctl:param name="url"/>	
		<ctl:param name="GridCoverageId"/>
		<ctl:param name="RectifiedGridCoverageId"/>
		<!-- Commented out as of https://github.com/opengeospatial/ets-wcs20/issues/37 -->
<!-- 		<ctl:param name="ReferenceableGridCoverageId"/> -->
                <ctl:param name="SupportsGML"/>
		<ctl:assertion>Req3:Test GridCoverage,RectifiedGridCoverage.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="not(empty($GridCoverageId))">
					<xsl:choose>
						<xsl:when test="$SupportsGML = 'true'">
							<xsl:variable name="GetCoverage">
								<ctl:request>
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:method>post</ctl:method>
									<ctl:header name="Content-type">text/xml</ctl:header>
									<ctl:body>
										<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
											<wcs:CoverageId>
												<xsl:value-of select="$CoverageId"/>
											</wcs:CoverageId>
											<wcs:Extension>
												<scal:ScaleByFactor>
													<scal:scaleFactor>2.0</scal:scaleFactor>
												</scal:ScaleByFactor>
											</wcs:Extension>
										</wcs:GetCoverage>
									</ctl:body>
									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:request>
							</xsl:variable>
							<ctl:call-test name="wcs2:GetCoverage_not_exception">
								<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:otherwise>
							<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:when>
			</xsl:choose>
			<xsl:choose>
				<xsl:when test="not(empty($RectifiedGridCoverageId))">
					<xsl:choose>
						<xsl:when test="$SupportsGML = 'true'">
							<xsl:variable name="GetCoverage1">
								<ctl:request>
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:method>post</ctl:method>
									<ctl:header name="Content-type">text/xml</ctl:header>
									<ctl:body>
										<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" service="WCS" version="2.0.1">
											<wcs:CoverageId>
												<xsl:value-of select="$RectifiedGridCoverageId"/>
											</wcs:CoverageId>
											<wcs:Extension>
												<scal:ScaleByFactor>
													<scal:scaleFactor>2.0</scal:scaleFactor>
												</scal:ScaleByFactor>
											</wcs:Extension>
										</wcs:GetCoverage>
									</ctl:body>
									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:request>
							</xsl:variable>
							<ctl:call-test name="wcs2:GetCoverage_not_exception">
								<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:otherwise>
							<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:when>
			</xsl:choose>
			<xsl:choose>
				<xsl:when test="empty($GridCoverageId) and empty($RectifiedGridCoverageId)">
					<ctl:message>[FAILURE] The service should offer at least one $GridCoverageId or one RectifiedGridCoverageId.</ctl:message>
					<ctl:fail/>
				</xsl:when>
			</xsl:choose>
			<!-- Commented out as of https://github.com/opengeospatial/ets-wcs20/issues/37 -->
<!-- 			<xsl:choose> -->
<!-- 				<xsl:when test="not(empty($ReferenceableGridCoverageId))"> -->
<!-- 					<xsl:choose> -->
<!-- 						<xsl:when test="$SupportsGML = 'true'"> -->
<!-- 							<xsl:variable name="GetCoverage2"> -->
<!-- 								<ctl:request> -->
<!-- 									<ctl:url> -->
<!-- 										<xsl:value-of select="$url"/> -->
<!-- 									</ctl:url> -->
<!-- 									<ctl:method>post</ctl:method> -->
<!-- 									<ctl:header name="Content-type">text/xml</ctl:header> -->
<!-- 									<ctl:body> -->
<!-- 										<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1"> -->
<!-- 											<wcs:CoverageId> -->
<!-- 												<xsl:value-of select="$ReferenceableGridCoverageId"/> -->
<!-- 											</wcs:CoverageId> -->
<!-- 											<wcs:Extension> -->
<!-- 												<scal:ScaleByFactor> -->
<!-- 													<scal:scaleFactor>2.0</scal:scaleFactor> -->
<!-- 												</scal:ScaleByFactor> -->
<!-- 											</wcs:Extension> -->
<!-- 										</wcs:GetCoverage> -->
<!-- 									</ctl:body> -->
<!-- 									<ctlp:XMLValidatingParser> -->
<!-- 										<ctlp:schemas> -->
<!-- 											<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema> -->
<!-- 										</ctlp:schemas> -->
<!-- 									</ctlp:XMLValidatingParser> -->
<!-- 								</ctl:request> -->
<!-- 							</xsl:variable> -->
<!-- 							<ctl:call-test name="wcs2:GetCoverage_not_exception"> -->
<!-- 								<ctl:with-param name="GetCoverage" select="$GetCoverage2"/> -->
<!-- 							</ctl:call-test> -->
<!-- 						</xsl:when> -->
<!-- 						<xsl:otherwise> -->
<!-- 							<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message> -->
<!-- 						</xsl:otherwise> -->
<!-- 					</xsl:choose> -->
<!-- 				</xsl:when> -->
<!-- 				<xsl:otherwise> -->
<!-- 					<ctl:message>[FAILURE] The service should offer at least one ReferenceableGridCoverageId.</ctl:message> -->
<!-- 					<ctl:fail/> -->
<!-- 				</xsl:otherwise> -->
<!-- 			</xsl:choose> -->
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req3-soap">
                <ctl:param name="url"/>
		<ctl:param name="GridCoverageId"/>
		<ctl:param name="RectifiedGridCoverageId"/>
		<!-- Commented out as of https://github.com/opengeospatial/ets-wcs20/issues/37 -->
<!-- 		<ctl:param name="ReferenceableGridCoverageId"/> -->
        <ctl:param name="SupportsGML"/>
		<ctl:assertion>Req3:Test GridCoverage,RectifiedGridCoverage.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="not(empty($GridCoverageId))">
					<xsl:choose>
						<xsl:when test="$SupportsGML = 'true'">
							<xsl:variable name="GetCoverage">
								<ctl:soap-request version="1.2" charset="UTF-8">
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:body>
										<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
											<wcs:CoverageId>
												<xsl:value-of select="$GridCoverageId"/>
											</wcs:CoverageId>
											<wcs:Extension>
												<scal:ScaleByFactor>
													<scal:scaleFactor>2.0</scal:scaleFactor>
												</scal:ScaleByFactor>
											</wcs:Extension>
										</wcs:GetCoverage>
									</ctl:body>
									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:soap-request>
							</xsl:variable>
							<ctl:call-test name="wcs2:GetCoverage_not_exception">
								<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:otherwise>
							<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:when>
			</xsl:choose>
			<xsl:choose>
				<xsl:when test="not(empty($RectifiedGridCoverageId))">
					<xsl:choose>
						<xsl:when test="$SupportsGML = 'true'">
							<xsl:variable name="GetCoverage1">
								<ctl:soap-request version="1.2" charset="UTF-8">
									<ctl:url>
										<xsl:value-of select="$url"/>
									</ctl:url>
									<ctl:body>
										<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0"  xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
											<wcs:CoverageId>
												<xsl:value-of select="$RectifiedGridCoverageId"/>
											</wcs:CoverageId>
											<wcs:Extension>
												<scal:ScaleByFactor>
													<scal:scaleFactor>2.0</scal:scaleFactor>
												</scal:ScaleByFactor>
											</wcs:Extension>
										</wcs:GetCoverage>
									</ctl:body>
									<ctlp:XMLValidatingParser>
										<ctlp:schemas>
											<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
										</ctlp:schemas>
									</ctlp:XMLValidatingParser>
								</ctl:soap-request>
							</xsl:variable>
							<ctl:call-test name="wcs2:GetCoverage_not_exception">
								<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
							</ctl:call-test>
						</xsl:when>
						<xsl:otherwise>
							<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:when>
			</xsl:choose>
			<xsl:choose>
				<xsl:when test="empty($GridCoverageId) and empty($RectifiedGridCoverageId)">
					<ctl:message>[FAILURE] The service should offer at least one $GridCoverageId or one RectifiedGridCoverageId.</ctl:message>
					<ctl:fail/>
				</xsl:when>
			</xsl:choose>
			<!-- Commented out as of https://github.com/opengeospatial/ets-wcs20/issues/37 -->
<!-- 			<xsl:choose> -->
<!-- 				<xsl:when test="not(empty($ReferenceableGridCoverageId))"> -->
<!-- 					<xsl:choose> -->
<!-- 						<xsl:when test="$SupportsGML = 'true'"> -->
<!-- 							<xsl:variable name="GetCoverage2"> -->
<!-- 								<ctl:soap-request version="1.2" charset="UTF-8"> -->
<!-- 									<ctl:url> -->
<!-- 										<xsl:value-of select="$url"/> -->
<!-- 									</ctl:url> -->
<!-- 									<ctl:body> -->
<!-- 										<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0"  xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1"> -->
<!-- 											<wcs:CoverageId> -->
<!-- 												<xsl:value-of select="$ReferenceableGridCoverageId"/> -->
<!-- 											</wcs:CoverageId> -->
<!-- 											<wcs:Extension> -->
<!-- 												<scal:ScaleByFactor> -->
<!-- 													<scal:scaleFactor>2.0</scal:scaleFactor> -->
<!-- 												</scal:ScaleByFactor> -->
<!-- 											</wcs:Extension> -->
<!-- 										</wcs:GetCoverage> -->
<!-- 									</ctl:body> -->
<!-- 									<ctlp:XMLValidatingParser> -->
<!-- 										<ctlp:schemas> -->
<!-- 											<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema> -->
<!-- 										</ctlp:schemas> -->
<!-- 									</ctlp:XMLValidatingParser> -->
<!-- 								</ctl:soap-request> -->
<!-- 							</xsl:variable> -->
<!-- 							<ctl:call-test name="wcs2:GetCoverage_not_exception"> -->
<!-- 								<ctl:with-param name="GetCoverage" select="$GetCoverage2"/> -->
<!-- 							</ctl:call-test> -->
<!-- 						</xsl:when> -->
<!-- 						<xsl:otherwise> -->
<!-- 							<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message> -->
<!-- 						</xsl:otherwise> -->
<!-- 					</xsl:choose> -->
<!-- 				</xsl:when> -->
<!-- 				<xsl:otherwise> -->
<!-- 					<ctl:message>[FAILURE] The service should offer at least one ReferenceableGridCoverage.</ctl:message> -->
<!-- 					<ctl:fail/> -->
<!-- 				</xsl:otherwise> -->
<!-- 			</xsl:choose> -->
		</ctl:code>
	</ctl:test>
	<!--req4-->
	<ctl:test name="wcs2:get-scal-req4-kvp">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req4:Test mutually-exclusive kvp.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALEFACTOR">2.0</ctl:param>
							<ctl:param name="SCALEAXES">
								<xsl:value-of select="concat(tokenize(string($axisLabels),'\s+')[1],'(2.0),',tokenize(string($axisLabels),'\s+')[2],'(2.0)')"/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req4-post">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req4:Test mutually-exclusive post.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0"  xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleByFactor>
											<scal:scaleFactor>2.0</scal:scaleFactor>
										</scal:ScaleByFactor>
										<scal:ScaleToExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:low>10</scal:low>
												<scal:high>20</scal:high>
											</scal:TargetAxisExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[2]"/>
												</scal:axis>
												<scal:low>20</scal:low>
												<scal:high>30</scal:high>
											</scal:TargetAxisExtent>
										</scal:ScaleToExtent>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req4-soap">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req4:Test mutually-exclusive soap.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleByFactor>
											<scal:scaleFactor>2.0</scal:scaleFactor>
										</scal:ScaleByFactor>
										<scal:ScaleAxesByFactor>
											<scal:ScaleAxis>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:scaleFactor>3.5</scal:scaleFactor>
											</scal:ScaleAxis>
											<scal:ScaleAxis>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[2]"/>
												</scal:axis>
												<scal:scaleFactor>3.5</scal:scaleFactor>
											</scal:ScaleAxis>
										</scal:ScaleAxesByFactor>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req5-->
	<ctl:test name="wcs2:get-scal-req5-kvp">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
		<ctl:param name="DescribeCoverage"/>
                <ctl:param name="SupportsGML"/>
		<ctl:assertion>Req5:Test scale-by-factor-positive kvp.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
  							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALEFACTOR">0</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<xsl:variable name="GetCoverage1">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALEFACTOR">-1</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req5-post">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
		<ctl:param name="DescribeCoverage"/>
                <ctl:param name="SupportsGML"/>
		<ctl:assertion>Req5:Test scale-by-factor-positive post.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleByFactor>
											<scal:scaleFactor>0</scal:scaleFactor>
										</scal:ScaleByFactor>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<xsl:variable name="GetCoverage1">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleByFactor>
											<scal:scaleFactor>-1</scal:scaleFactor>
										</scal:ScaleByFactor>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req5-soap">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
		<ctl:param name="DescribeCoverage"/>
                <ctl:param name="SupportsGML"/>
		<ctl:assertion>Req5:scale-by-factor-positive soap.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleByFactor>
											<scal:scaleFactor>0</scal:scaleFactor>
										</scal:ScaleByFactor>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<xsl:variable name="GetCoverage1">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$GridCoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleByFactor>
											<scal:scaleFactor>-1</scal:scaleFactor>
										</scal:ScaleByFactor>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req6-->
	<ctl:test name="wcs2:get-scal-req6-kvp">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
		<ctl:assertion>Req6:Test Requirement 6 scale-axes-by-factor-present kvp.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALEAXES"/>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req6-post">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
		<ctl:assertion>Req6:Test scale-axes-by-factor-present post.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleAxesByFactor>
</scal:ScaleAxesByFactor>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req6-soap">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
		<ctl:assertion>Req6:Test scale-axes-by-factor-present soap.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleAxesByFactor>
</scal:ScaleAxesByFactor>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req7-->
	<ctl:test name="wcs2:get-scal-req7-kvp">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req7:Test scale-to-size-positive kvp.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALESIZE">
								<xsl:value-of select="concat(tokenize(string($axisLabels),'\s+')[1],'(0)')"/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req18-InvalidScaleFactor">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<xsl:variable name="GetCoverage1">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALESIZE">
								<xsl:value-of select="concat(tokenize(string($axisLabels),'\s+')[2],'(-1)')"/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req18-InvalidScaleFactor">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req7-post">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req7:Test scale-to-size-positive post.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0"  xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToSize>
											<scal:TargetAxisSize>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:targetSize>0</scal:targetSize>
											</scal:TargetAxisSize>
										</scal:ScaleToSize>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req18-InvalidScaleFactor">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<xsl:variable name="GetCoverage1">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToSize>
											<scal:TargetAxisSize>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:targetSize>-1</scal:targetSize>
											</scal:TargetAxisSize>
										</scal:ScaleToSize>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req18-InvalidScaleFactor">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req7-soap">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req7:Test scale-to-size-positive soap.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToSize>
											<scal:TargetAxisSize>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:targetSize>0</scal:targetSize>
											</scal:TargetAxisSize>
										</scal:ScaleToSize>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req18-InvalidScaleFactor">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<xsl:variable name="GetCoverage1">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$GridCoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToSize>
											<scal:TargetAxisSize>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:targetSize>-1</scal:targetSize>
											</scal:TargetAxisSize>
										</scal:ScaleToSize>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req18-InvalidScaleFactor">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req8-->
	<ctl:test name="wcs2:get-scal-req8-kvp">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
		<ctl:assertion>Req8:Test scale-to-size-existing-axis kvp.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALESIZE">
								<xsl:value-of select="concat('axis_not_exist','(10)')"/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req18-ScaleAxisUndefined">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req8-post">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
		<ctl:assertion>Req8:Test scale-to-size-existing-axis post.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToSize>
											<scal:TargetAxisSize>
												<scal:axis>
      axis_not_exist
    </scal:axis>
												<scal:targetSize>10</scal:targetSize>
											</scal:TargetAxisSize>
										</scal:ScaleToSize>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req18-ScaleAxisUndefined">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req8-soap">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
		<ctl:assertion>Req8:Test scale-to-size-existing-axis soap.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$GridCoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToSize>
											<scal:TargetAxisSize>
												<scal:axis>
      axis_not_exist
    </scal:axis>
												<scal:targetSize>10</scal:targetSize>
											</scal:TargetAxisSize>
										</scal:ScaleToSize>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req18-ScaleAxisUndefined">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req9-->
	<ctl:test name="wcs2:get-scal-req9-kvp">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req9:Test scale-to-size-unique-axis kvp.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALESIZE">
								<xsl:value-of select="concat(tokenize(string($axisLabels),'\s+')[1],'(10)')"/>
							</ctl:param>
							<ctl:param name="SCALESIZE">
								<xsl:value-of select="concat(tokenize(string($axisLabels),'\s+')[1],'(10)')"/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req9-post">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req9:Test scale-to-size-unique-axis post.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToSize>
											<scal:TargetAxisSize>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:targetSize>10</scal:targetSize>
											</scal:TargetAxisSize>
											<scal:TargetAxisSize>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:targetSize>10</scal:targetSize>
											</scal:TargetAxisSize>
										</scal:ScaleToSize>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req9-soap">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req9:Test scale-to-size-unique-axis soap.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToSize>
											<scal:TargetAxisSize>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:targetSize>10</scal:targetSize>
											</scal:TargetAxisSize>
											<scal:TargetAxisSize>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:targetSize>10</scal:targetSize>
											</scal:TargetAxisSize>
										</scal:ScaleToSize>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req10-->
	<ctl:test name="wcs2:get-scal-req10-kvp">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req10:Test scale-to-extent kvp.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALEEXTENT">
								<xsl:value-of select="concat(tokenize(string($axisLabels),'\s+')[1],'(20:10),',tokenize(string($axisLabels),'\s+')[2],'(100:200)')"/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req18-InvalidExtent">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req10-post">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req10:Test scale-to-extent post.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:low>100</scal:low>
												<scal:high>30</scal:high>
											</scal:TargetAxisExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[2]"/>
												</scal:axis>
												<scal:low>20</scal:low>
												<scal:high>30</scal:high>
											</scal:TargetAxisExtent>
										</scal:ScaleToExtent>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req18-InvalidExtent">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req10-soap">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req10:Test scale-to-extent soap.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:low>10</scal:low>
												<scal:high>20</scal:high>
											</scal:TargetAxisExtent>
											<scal:TargetAxisExtent>
												<scal:low>20</scal:low>
												<scal:high>30</scal:high>
											</scal:TargetAxisExtent>
										</scal:ScaleToExtent>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req18-InvalidExtent">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req11-->
	<ctl:test name="wcs2:get-scal-req11-kvp">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req11:Test extent-existing-axis kvp.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALEEXTENT">
								<xsl:value-of select="concat('axis_not_exist','(10:20),',tokenize(string($axisLabels),'\s+')[2],'(100:200)')"/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req11-post">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req11:Test extent-existing-axis post.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
      'axis_not_exist'
    </scal:axis>
												<scal:low>10</scal:low>
												<scal:high>30</scal:high>
											</scal:TargetAxisExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[2]"/>
												</scal:axis>
												<scal:low>20</scal:low>
												<scal:high>30</scal:high>
											</scal:TargetAxisExtent>
										</scal:ScaleToExtent>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<ctl:test name="wcs2:get-scal-req11-soap">
		<ctl:param name="url"/>
		<ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req11:Test extent-existing-axis soap.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$GridCoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:low>10</scal:low>
												<scal:high>20</scal:high>
											</scal:TargetAxisExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
      axis_not_exist
    </scal:axis>
												<scal:low>20</scal:low>
												<scal:high>30</scal:high>
											</scal:TargetAxisExtent>
										</scal:ScaleToExtent>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:GetCoverage_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req12-->
	<ctl:test name="wcs2:get-scal-req12">
		<ctl:param name="GetCoverage"/>
		<ctl:param name="GetCoverage1"/>
		<ctl:assertion>Req12:Test scale-by-factor result.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not(number(tokenize(normalize-space($GetCoverage//*[local-name()='domainSet']//*[local-name()='GridEnvelope']/*[local-name()='high']),' ')[1]) = number(tokenize(normalize-space($GetCoverage1//*[local-name()='domainSet']//*[local-name()='GridEnvelope']/*[local-name()='high']),' ')[1]) )">
				<ctl:message>[FAILURE] The scal result should be equal.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req13-->
	<ctl:test name="wcs2:get-scal-req13">
		<ctl:param name="GetCoverage"/>
		<ctl:param name="DescribeCoverage"/>
		<ctl:assertion>Req13:Test scale-axes-by-factor result.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not(floor(number(tokenize(string($DescribeCoverage//*[local-name()='domainSet']//*[local-name()='GridEnvelope']/*[local-name()='high']),'\s+')[1]) * 2) = number(tokenize(string($GetCoverage//*[local-name()='domainSet']//*[local-name()='GridEnvelope']/*[local-name()='high']),'\s+')[1] ))">
				<ctl:message>[FAILURE] The scal result is not correct.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req14-->
	<ctl:test name="wcs2:get-scal-req14">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>Req14:Test scale-to-size result.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not(number(tokenize(string($GetCoverage//*[local-name()='domainSet']//*[local-name()='GridEnvelope']/*[local-name()='high']),'\s+')[1]) - number(tokenize(string($GetCoverage//*[local-name()='domainSet']//*[local-name()='GridEnvelope']/*[local-name()='low']),'\s+')[1]) + 1=1)">
				<ctl:message>[FAILURE] The scal result is not correct.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req15-->
	<ctl:test name="wcs2:get-scal-req15">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>Req15:Test scale-to-extent result.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not(number(tokenize(string($GetCoverage//*[local-name()='domainSet']//*[local-name()='GridEnvelope']/*[local-name()='high']),'\s+')[1]) = 10 and number(tokenize(string($GetCoverage//*[local-name()='domainSet']//*[local-name()='GridEnvelope']/*[local-name()='low']),'\s+')[1]) = 0)">
				<ctl:message>[FAILURE] The scal result is not correct.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req17-->
	<ctl:test name="wcs2:get-scal-req17">
		<ctl:param name="GetCoverage"/>
		<ctl:param name="DescribeCoverage"/>
		<ctl:assertion>Req17:Test keep-type result.</ctl:assertion>
		<ctl:code>
			<xsl:if test="not($GetCoverage//*[local-name()='rangeType']//*[local-name()='field']/@name[1]=$DescribeCoverage//*[local-name()='rangeType']//*[local-name()='field']/@name[1])">
				<ctl:message>[FAILURE] The scal result is not correct.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req19-22-->
	<ctl:test name="wcs2:get-scal-req19-22">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
		<ctl:param name="DescribeCoverage"/>
                <ctl:param name="CoverageId"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
		<ctl:assertion>Req19:Test scale-by-factor KVP request.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALEFACTOR">2.0</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<xsl:variable name="GetCoverage1">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALEAXES">
								<xsl:value-of select="concat(tokenize(string($axisLabels),'\s+')[1],'(2.0),',tokenize(string($axisLabels),'\s+')[2],'(2.0)')"/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<xsl:variable name="GetCoverage2">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALESIZE">
								<xsl:value-of select="concat(tokenize(string($axisLabels),'\s+')[1],'(1.0),',tokenize(string($axisLabels),'\s+')[2],'(2.0)')"/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<xsl:variable name="GetCoverage3">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>get</ctl:method>
							<ctl:param name="SERVICE">WCS</ctl:param>
							<ctl:param name="VERSION">2.0.1</ctl:param>
							<ctl:param name="REQUEST">GetCoverage</ctl:param>
							<ctl:param name="CoverageId">
								<xsl:value-of select="$CoverageId"/>
							</ctl:param>
							<ctl:param name="SCALEEXTENT">
								<xsl:value-of select="concat(tokenize(string($axisLabels),'\s+')[1],'(10:20),',tokenize(string($axisLabels),'\s+')[2],'(100:200)')"/>
							</ctl:param>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="url">http://schemas.opengis.net/wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:get-scal-req12">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
						<ctl:with-param name="GetCoverage1" select="$GetCoverage1"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req13">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
						<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req14">
						<ctl:with-param name="GetCoverage" select="$GetCoverage2"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req15">
						<ctl:with-param name="GetCoverage" select="$GetCoverage3"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req17">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
						<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req19">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req20">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req21">
						<ctl:with-param name="GetCoverage" select="$GetCoverage2"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req22">
						<ctl:with-param name="GetCoverage" select="$GetCoverage3"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req18-->
	<ctl:test name="wcs2:get-scal-req18-InvalidCoverageType">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>Req18:Test InvalidCoverageType request.</ctl:assertion>
		<ctl:code>
			<xsl:if test=".//@exceptionCode='InvalidCoverageType'">
				<ctl:message>[FAILURE] The exception code value is not correct.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req18-->
	<ctl:test name="wcs2:get-scal-req18-InvalidScaleFactor">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>Req18:Test InvalidScaleFactor request.</ctl:assertion>
		<ctl:code>
			<xsl:if test=".//@exceptionCode='InvalidScaleFactor'">
				<ctl:message>[FAILURE] The exception code value is not correct.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req18-->
	<ctl:test name="wcs2:get-scal-req18-InvalidExtent">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>Req18:Test InvalidExtent request.</ctl:assertion>
		<ctl:code>
			<xsl:if test=".//@exceptionCode='InvalidExtent'">
				<ctl:message>[FAILURE] The exception code value is not correct.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req18-->
	<ctl:test name="wcs2:get-scal-req18-ScaleAxisUndefined">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>Req18:Test ScaleAxisUndefined request.</ctl:assertion>
		<ctl:code>
			<xsl:if test=".//@exceptionCode='ScaleAxisUndefined'">
				<ctl:message>[FAILURE] The exception code value is not correct.</ctl:message>
				<ctl:fail/>
			</xsl:if>
		</ctl:code>
	</ctl:test>
	<!--req19-->
	<ctl:test name="wcs2:get-scal-req19">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>Req19:Test scale-by-factor KVP request.</ctl:assertion>
		<ctl:code>
			<ctl:call-test name="wcs2:GetCoverage_not_exception">
				<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
			</ctl:call-test>
		</ctl:code>
	</ctl:test>
	<!--req20-->
	<ctl:test name="wcs2:get-scal-req20">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>Req20:Test scale-axes-by-factor KVP request.</ctl:assertion>
		<ctl:code>
			<ctl:call-test name="wcs2:GetCoverage_not_exception">
				<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
			</ctl:call-test>
		</ctl:code>
	</ctl:test>
	<!--req21-->
	<ctl:test name="wcs2:get-scal-req21">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>Req21:Test scale-to-size KVP request.</ctl:assertion>
		<ctl:code>
			<ctl:call-test name="wcs2:GetCoverage_not_exception">
				<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
			</ctl:call-test>
		</ctl:code>
	</ctl:test>
	<!--req22-->
	<ctl:test name="wcs2:get-scal-req22">
		<ctl:param name="GetCoverage"/>
		<ctl:assertion>Req22:Test scale-to-extent KVP request.</ctl:assertion>
		<ctl:code>
			<ctl:call-test name="wcs2:GetCoverage_not_exception">
				<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
			</ctl:call-test>
		</ctl:code>
	</ctl:test>
	<!--req23-->
	<ctl:test name="wcs2:get-scal-req23">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
		<ctl:param name="DescribeCoverage"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
                <ctl:param name="CoverageId"/>
		<ctl:assertion>Req23:Test XML/Post request encoding.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleByFactor>
											<scal:scaleFactor>2.0</scal:scaleFactor>
										</scal:ScaleByFactor>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<xsl:variable name="GetCoverage1">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleAxesByFactor>
											<scal:ScaleAxis>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:scaleFactor>2.0</scal:scaleFactor>
											</scal:ScaleAxis>
											<scal:ScaleAxis>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[2]"/>
												</scal:axis>
												<scal:scaleFactor>2.0</scal:scaleFactor>
											</scal:ScaleAxis>
										</scal:ScaleAxesByFactor>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
					</ctl:call-test>
					<xsl:variable name="GetCoverage2">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToSize>
											<scal:TargetAxisSize>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:targetSize>10</scal:targetSize>
											</scal:TargetAxisSize>
											<scal:TargetAxisSize>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[2]"/>
												</scal:axis>
												<scal:targetSize>20</scal:targetSize>
											</scal:TargetAxisSize>
										</scal:ScaleToSize>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage2"/>
					</ctl:call-test>
					<xsl:variable name="GetCoverage3">
						<ctl:request>
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:method>post</ctl:method>
							<ctl:header name="Content-type">text/xml</ctl:header>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:low>10</scal:low>
												<scal:high>20</scal:high>
											</scal:TargetAxisExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[2]"/>
												</scal:axis>
												<scal:low>100</scal:low>
												<scal:high>200</scal:high>
											</scal:TargetAxisExtent>
										</scal:ScaleToExtent>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage3"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req12">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
						<ctl:with-param name="GetCoverage1" select="$GetCoverage1"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req13">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
						<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req14">
						<ctl:with-param name="GetCoverage" select="$GetCoverage2"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req15">
						<ctl:with-param name="GetCoverage" select="$GetCoverage3"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req17">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
						<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
	<!--req24-->
	<ctl:test name="wcs2:get-scal-req24">
		<ctl:param name="url"/>
		<ctl:param name="Capabilities"/>
                <ctl:param name="SupportsGML"/>
                <ctl:param name="axisLabels"/>
                <ctl:param name="CoverageId"/>
		<ctl:assertion>Req24:Test SOAP request encoding.</ctl:assertion>
		<ctl:code>
			<xsl:choose>
				<xsl:when test="$SupportsGML = 'true'">
					<xsl:variable name="GetCoverage">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleByFactor>
											<scal:scaleFactor>2.0</scal:scaleFactor>
										</scal:ScaleByFactor>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					</ctl:call-test>
					<xsl:variable name="GetCoverage1">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleAxesByFactor>
											<scal:ScaleAxis>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:scaleFactor>2.0</scal:scaleFactor>
											</scal:ScaleAxis>
											<scal:ScaleAxis>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[2]"/>
												</scal:axis>
												<scal:scaleFactor>2.0</scal:scaleFactor>
											</scal:ScaleAxis>
										</scal:ScaleAxesByFactor>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage1" select="$GetCoverage"/>
					</ctl:call-test>
					<xsl:variable name="GetCoverage2">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToSize>
											<scal:TargetAxisSize>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:targetSize>10</scal:targetSize>
											</scal:TargetAxisSize>
											<scal:TargetAxisSize>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[2]"/>
												</scal:axis>
												<scal:targetSize>20</scal:targetSize>
											</scal:TargetAxisSize>
										</scal:ScaleToSize>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage2" select="$GetCoverage"/>
					</ctl:call-test>
					<xsl:variable name="GetCoverage3">
						<ctl:soap-request version="1.2" charset="UTF-8">
							<ctl:url>
								<xsl:value-of select="$url"/>
							</ctl:url>
							<ctl:body>
								<wcs:GetCoverage xmlns:wcs="http://www.opengis.net/wcs/2.0" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rsub="http://www.opengis.net/wcs/range-subsetting/1.0" xmlns:scal="http://www.opengis.net/wcs/scaling/1.0" service="WCS" version="2.0.1">
									<wcs:CoverageId>
										<xsl:value-of select="$CoverageId"/>
									</wcs:CoverageId>
									<wcs:Extension>
										<scal:ScaleToExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[1]"/>
												</scal:axis>
												<scal:low>10</scal:low>
												<scal:high>20</scal:high>
											</scal:TargetAxisExtent>
											<scal:TargetAxisExtent>
												<scal:axis>
													<xsl:value-of select="tokenize(string($axisLabels),'\s+')[2]"/>
												</scal:axis>
												<scal:low>100</scal:low>
												<scal:high>200</scal:high>
											</scal:TargetAxisExtent>
										</scal:ScaleToExtent>
									</wcs:Extension>
								</wcs:GetCoverage>
							</ctl:body>
							<ctlp:XMLValidatingParser>
								<ctlp:schemas>
									<ctlp:schema type="resource">wcs/2.0/wcsAll.xsd</ctlp:schema>
								</ctlp:schemas>
							</ctlp:XMLValidatingParser>
						</ctl:soap-request>
					</xsl:variable>
					<ctl:call-test name="wcs2:GetCoverage_not_exception">
						<ctl:with-param name="GetCoverage3" select="$GetCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req12">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
						<ctl:with-param name="GetCoverage1" select="$GetCoverage1"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req13">
						<ctl:with-param name="GetCoverage" select="$GetCoverage1"/>
						<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req14">
						<ctl:with-param name="GetCoverage" select="$GetCoverage2"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req15">
						<ctl:with-param name="GetCoverage" select="$GetCoverage3"/>
					</ctl:call-test>
					<ctl:call-test name="wcs2:get-scal-req17">
						<ctl:with-param name="GetCoverage" select="$GetCoverage"/>
					<ctl:with-param name="DescribeCoverage" select="$DescribeCoverage"/>
					</ctl:call-test>
				</xsl:when>
				<xsl:otherwise>
					<ctl:message>[MESSAGE] The server does not support the gml coverage.</ctl:message>
				</xsl:otherwise>
			</xsl:choose>
		</ctl:code>
	</ctl:test>
</ctl:package>

